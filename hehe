import { XMLParser } from "fast-xml-parser";
import { readFileSync, writeFileSync } from "fs";
import { template, termStructure } from "./usTreasury.js";

// XML File from US Treasury to get Risk Free Rate
const xmlFile = readFileSync(`${process.cwd()}/myFunction/ust2010.xml`, "utf8");
const parser = new XMLParser();
const json = parser.parse(xmlFile);

let stk = [];
let i = 0;
Object.entries(termStructure).forEach(([ffTerm, ustTerm]) => {
  const ffJsonMarketData = JSON.parse(JSON.stringify(template));
  const eodData = ffJsonMarketData.results.history[0].eoddata;
  const equityInfo = ffJsonMarketData.results.history[0].equityinfo;
  const Key = ffJsonMarketData.results.history[0].key;

  // Change longname
  let longName =
    ffTerm + " (Treasury " + ustTerm.substring(2, ustTerm.length) + ")";
  equityInfo.longname = longName;

  // Change shortname according to date
  equityInfo.shortname = ffTerm;
  Key.symbol = ffTerm;
  ffJsonMarketData.results.history[0].symbolstring = ffTerm;

  // Change URL
  let URL = Key.ffUrl;
  URL = URL.substring(0, URL.length - 11);
  URL += ffTerm;
  URL += ".json";
  Key.ffUrl = URL;
  let startDate, endDate;
  json.feed.entry.forEach((e) => {
    // Push End of day Data
    let dd = e.content["m:properties"]["d:NEW_DATE"];
    dd = dd.substring(0, dd.length - 9);

    // Reverse the eoddata objects so that they are in DESCENDING order by implementing stack
    stk.push({
      date: dd,
      close: e.content["m:properties"][ustTerm],
    });

    // Calculate start and end date
    if (!startDate || dd < startDate) startDate = dd;
    if (!endDate || dd > endDate) endDate = dd;
  });
  ffJsonMarketData.results.history[0].start = startDate;
  ffJsonMarketData.results.history[0].end = endDate;

  // Putting in eodData in reverse order
  while (stk.length) {
    let hehe = stk[stk.length - 1];
    eodData.push(hehe);
    stk.pop();
  }
  console.log(ffTerm, ustTerm);
  console.log("\n");
  console.log(JSON.stringify(ffJsonMarketData));
  console.log("\n");

  // writeFileSync
  let file = JSON.stringify(ffJsonMarketData);
  writeFileSync(equityInfo.shortname + ".json", file);
  console.log("File created_" + i.toString());
  i = 0;
});
